---

# install nvidia for debian: https://wiki.debian.org/NvidiaGraphicsDrivers#Debian_11_.22Bullseye.22

- name: Check if dedicated NVIDIA graficcard is built in and install drivers
  hosts: localhost
  tasks:
    - name: check lspci for NVIDIA VGA
      shell: lspci | grep VGA | grep NVIDIA
      register: checknvidia
      failed_when: checknvidia.rc > 1
      changed_when: false
    - name: print debug message if NVIDIA is found
      ansible.builtin.debug:
        msg:
          - "NVIDIA Grafic Card found."
      when: checknvidia.rc == 0
    - name: print debug message if NVIDIA is not found
      ansible.builtin.debug:
        msg:
          - "NVIDIA Grafic Card NOT found."
      when: checknvidia.rc == 1

    - name: Add bullseye repository into sources list for non-free
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian bullseye main contrib non-free
        state: present
      when: (checknvidia.rc == 0 and ansible_facts['distribution'] == "Debian" and ansible_facts['lsb']['major_release'] == "11")
    - name: Add bullseye sources repository into sources list for non-free
      ansible.builtin.apt_repository:
        repo: deb-src http://deb.debian.org/debian bullseye main contrib non-free
        state: present
      when: (checknvidia.rc == 0 and ansible_facts['distribution'] == "Debian" and ansible_facts['lsb']['major_release'] == "11")


    - name: Add bullseye-backports repository into sources list
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian bullseye-backports main contrib non-free
        state: present
      when: (checknvidia.rc == 0 and ansible_facts['distribution'] == "Debian" and ansible_facts['lsb']['major_release'] == "11")
    - name: Add bullseye-backports sources repository into sources list
      ansible.builtin.apt_repository:
        repo: deb-src http://deb.debian.org/debian bullseye-backports main contrib non-free
        state: present
      when: (checknvidia.rc == 0 and ansible_facts['distribution'] == "Debian" and ansible_facts['lsb']['major_release'] == "11")
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install module assistant
      apt:
        pkg: 
          - module-assistant
        state: latest
        update_cache: yes
      when: checknvidia.rc == 0

    - name: Install Linux Headers
      apt:
        pkg: 
          - linux-headers-amd64 
        state: latest
        update_cache: yes

    - name: m-a prepare 1
      shell: m-a prepare

    - name: Install NVIDIA driver
      apt:
        pkg: 
          - nvidia-driver 
          - firmware-misc-nonfree
          - nvidia-xconfig
        state: latest
        default_release: bullseye-backports
        update_cache: yes
      when: checknvidia.rc == 0
      register: drivers_installed

    - name: m-a prepare 2
      shell: m-a prepare


    - name: Install Xorg
      apt:
        pkg: 
          - xorg 
        state: latest
        update_cache: yes
      when: checknvidia.rc == 0

    - name: Install CUDA Toolkit
      apt:
        pkg: 
          - nvidia-cuda-dev
          - nvidia-cuda-toolkit
        state: latest
        update_cache: yes
      when: checknvidia.rc == 0

    - name: m-a prepare 3
      shell: m-a prepare


    - name: update-initramfs
      shell: update-initramfs -u
      when: (drivers_installed is changed and checknvidia.rc == 0)

    - name: Reboot immediately if there was a change.
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: (drivers_installed is changed and checknvidia.rc == 0)
    
    - name: Wait for the reboot to complete if there was a change.
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 900
      when: (drivers_installed is changed and checknvidia.rc == 0)

    - name: update-initramfs
      shell: nvidia-xconfig
      when: (drivers_installed is changed and checknvidia.rc == 0)
